
сами лоадеры лежат вот здесь:
слеши в имени объекта заставляют создавать отдельные папки. По факту в папке шаредОбжекта создается дерево папок
а внутри файл с именем loading.sol
sharedObject = SharedObject.getLocal("/addictedCompany/" + APP_NAME + "/loading", "/");

в самом обжекте структура следующая:

sharedObject.data.<loaderName>.contents[url] - contents - это словарь контента с ключами по урлу.

БулкЛоадер создается как обычно.
Прикрутил синглтоновский ГетЛоадер, который если итема нету - создает с дефолтными параметрами.
Если важно поменять какой-то параметр лучше поставить его руками после того как получили инстанс.

в метод add() добавил еще один параметр "shared" (BulkLoader.SHARED).
Если этот параметр стоит - то LoadingItem создается с типом SharedItem - это модифицированный BinaryItem.
Обычный лоадер, но перд тем как начинать загрузку проверяет наличие урла в шаредОбжекте, и если таковой есть,
то никакой загрузки не происходит, просто диспатчатся нужные события.

Таким образом эмулируется работа булкЛоадера как было раньше. Работают все подписки на события.
В шаредОбжекте хранится только словарь контента с ключами по урлу.